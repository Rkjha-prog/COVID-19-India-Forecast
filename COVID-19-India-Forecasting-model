import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
# URL for the JHU CSSE COVID-19 confirmed cases dataset
url = 'https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv'
# Load the data
df_raw = pd.read_csv(url)
print("Shape of the raw dataset:", df_raw.shape)
print(df_raw.head())

# Filter for a specific country, e.g., India
df_country = df_raw[df_raw['Country/Region'] == 'India']
# Melt the dataframe to turn date columns into a single 'Date' column
df_melted = df_country.melt(id_vars=['Province/State', 'Country/Region', 'Lat', 'Long'],
                           var_name='Date',
                           value_name='Cumulative_Cases')
# Convert 'Date' column to datetime objects
df_melted['Date'] = pd.to_datetime(df_melted['Date'])
# Group by date to get a single time series
df_ts = df_melted.groupby('Date')['Cumulative_Cases'].sum().reset_index()
df_ts.set_index('Date', inplace=True)
# Calculate daily new cases from cumulative cases
df_ts['Daily_New_Cases'] = df_ts['Cumulative_Cases'].diff().dropna()
# Remove the initial cumulative column and any missing values
df_final = df_ts[['Daily_New_Cases']].dropna()
print("\nPrepared time series data for India:")
print(df_final.head())

# Plot the daily new cases
plt.figure(figsize=(14, 7))
plt.plot(df_final.index, df_final['Daily_New_Cases'], label='Daily New Cases')
plt.title('Daily New COVID-19 Cases in India')
plt.xlabel('Date')
plt.ylabel('Number of Cases')
plt.legend()
plt.grid(True)
plt.show()

# ARIMA model parameters (p, d, q)
# p: order of the autoregressive part
# d: degree of differencing
# q: order of the moving average part
p, d, q = 5, 1, 0
# Create and train the ARIMA model
model = ARIMA(df_final['Daily_New_Cases'], order=(p, d, q))
print("--- Training the ARIMA model... ---")
model_fit = model.fit()
print("--- Model training complete. ---")
# Print the model summary
print(model_fit.summary())


# Forecast the next 30 days
forecast_steps = 30
forecast = model_fit.forecast(steps=forecast_steps)
# Create a date range for the forecast
last_date = df_final.index[-1]
forecast_dates = pd.date_range(start=last_date + pd.Timedelta(days=1), periods=forecast_steps)
# Plot the historical data and the forecast
plt.figure(figsize=(14, 7))
plt.plot(df_final.index, df_final['Daily_New_Cases'], label='Historical Daily Cases')
plt.plot(forecast_dates, forecast, color='red', linestyle='--', label='Forecasted Cases')
plt.title('COVID-19 Daily Cases Forecast')
plt.xlabel('Date')
plt.ylabel('Number of Cases')
plt.legend()
plt.grid(True)
plt.show()
